general:
  branches:
    ignore:
      # this can be removed
      - circleci_cd_example

machine:
  timezone: America/New_York
  services:
    - docker
  environment:
    RAILS_ENV: test

    # unique identifier used to tag the docker images; fundamental to the deploy script (e.g.75_db4b44b)
    DEPLOY_TAG: ${CIRCLE_BUILD_NUM}_${CIRCLE_SHA1:0:7}

dependencies:
  override:
    - docker info
    - |
      cat << VARS > .env
      SECRET_KEY_BASE=testsecret
      RAILS_ENV=test
      POSTGRES_USER = postgres
      POSTGRES_PASSWORD = yourpassword
      VARS

    # compile assets; assets will be copied into both the web server image and the application server image
    - bundle install
    - bundle exec rake assets:precompile

    - docker-compose build

database:
  pre:
    - docker-compose up -d
    - sleep 1
  override:
    - docker-compose run app rake db:create db:schema:load

test:
  override:
    - docker-compose run app rspec spec

# configure image deployment
# https://circleci.com/docs/configuration#deployment
deployment:

  # unique name of this deployment configuration
  hub:

    # name of the branch(es) this deployment section applies to
    branch: master

    commands:
      # tag the images we built with a repository name and deploy identifier
      - docker tag $(docker images | grep dockerexample_app | awk '{ print $3 }') ccstump/dockerexample_app:$DEPLOY_TAG
      - docker tag $(docker images | grep dockerexample_web | awk '{ print $3 }') ccstump/dockerexample_web:$DEPLOY_TAG
      - docker tag $(docker images | grep postgres | awk '{ print $3 }') ccstump/dockerexample_db:$DEPLOY_TAG

      # log into Docker Hub so we can push our tagged images
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS

      # push tagged images
      - docker push ccstump/dockerexample_app:$DEPLOY_TAG
      - docker push ccstump/dockerexample_web:$DEPLOY_TAG
      - docker push ccstump/dockerexample_db:$DEPLOY_TAG

      # run deploy script
      - bundle exec rake docker:deploy
